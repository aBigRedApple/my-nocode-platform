generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id                Int                @id @default(autoincrement())
  email             String             @unique @db.VarChar(191)
  name              String             @db.VarChar(100)
  password          String             @db.VarChar(255)
  layouts           Layout[]
  templates         Template[]
  favorites         Favorite[] // 用户收藏的模板
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @updatedAt

  @@index([email])
}

model Layout {
  id          Int        @id @default(autoincrement())
  userId      Int
  user        User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  name        String     @db.VarChar(100)
  description String?    @db.VarChar(255)
  boxes       Box[]
  templates   Template[]
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt

  @@index([userId])
}

model Box {
  id        Int        @id @default(autoincrement())
  layoutId  Int
  layout    Layout     @relation(fields: [layoutId], references: [id], onDelete: Cascade)
  positionX Int        @db.SmallInt
  positionY Int        @db.SmallInt
  width     Int        @default(300)
  height    Int        @default(350)
  components Component[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt

  @@index([layoutId])
}

model Component {
  id        Int      @id @default(autoincrement())
  boxId     Int
  box       Box      @relation(fields: [boxId], references: [id], onDelete: Cascade)
  type      String   @db.VarChar(50)
  width     Int      @default(100)
  height    Int      @default(40)
  props     Json?
  imageId   Int?     @unique
  image     Image?   @relation(fields: [imageId], references: [id], onDelete: SetNull)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([boxId])
}

model Image {
  id        Int       @id @default(autoincrement())
  path      String    @db.VarChar(255)
  size      Int?
  component Component?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Template {
  id                Int                @id @default(autoincrement())
  name              String             @db.VarChar(100)
  description       String?            @db.VarChar(255)
  thumbnail         String?            @db.VarChar(255)
  category          String             @db.VarChar(50)
  userId            Int?
  user              User?              @relation(fields: [userId], references: [id], onDelete: SetNull)
  layoutId          Int?
  layout            Layout?            @relation(fields: [layoutId], references: [id], onDelete: SetNull)
  favorites         Favorite[] // 被用户收藏的关系
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @updatedAt

  @@index([userId])
  @@index([layoutId])
  @@index([category])
}

model Favorite {
  id         Int      @id @default(autoincrement())
  userId     Int
  templateId Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  template   Template @relation(fields: [templateId], references: [id], onDelete: Cascade)
}